name: release

on:
  push:
    tags: "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  changelog:
    name: changelog
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build_changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v2
        with:
          configuration: ".github/release_notes_configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: build
    strategy:
      matrix:
        include:
          - libc: "gnueabihf"
            arch_rust: "armv7"
            platform: "linux/arm/v7"
          - libc: "gnu"
            arch_rust: "aarch64"
            platform: "linux/arm64/v8"
          - libc: "gnu"
            arch_rust: "x86_64"
            platform: "linux/amd64"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup_toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
          override: true
          target: ${{ matrix.arch_rust }}-unknown-linux-${{ matrix.libc }}
          toolchain: stable

      - name: cargo_dependency_cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: resolve_version_tag
        id: version_tag
        uses: battila7/get-version-action@v2

      - name: write_version_to_toml
        uses: thomaseizinger/set-crate-version@0941739e872e465c18af1148eccf85b249b82016
        with:
          version: ${{ steps.version_tag.outputs.version-without-v }}

      - name: cargo_build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.arch_rust }}-unknown-linux-${{ matrix.libc }} --release

      - name: docker_login
        run: echo ${{ secrets.DOCKER_ATOKEN }} | docker login -u serowy --password-stdin

      - name: docker_setup_qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: docker_setup_buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: docker_build_and_push
        run: |
          docker buildx build --push \
            --tag serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-${{ matrix.arch_rust }} \
            --platform ${{ matrix.platform }} \
            --file Dockerfile \
            --build-arg SUB_DIR=${{ matrix.arch_rust }}-unknown-linux-${{ matrix.libc }}/ \
            .

  manifest:
    name: manifest
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: resolve_version_tag
        id: version_tag
        uses: battila7/get-version-action@v2

      - name: docker_login
        run: echo ${{ secrets.DOCKER_ATOKEN }} | docker login -u serowy --password-stdin

      - name: create_manifest_latest
        run: |
          docker manifest create \
          serowy/docker2mqtt:latest \
          --amend serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-armv7 \
          --amend serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-aarch64 \
          --amend serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-x86_64

      - name: create_manifest_version
        run: |
          docker manifest create \
          serowy/docker2mqtt:${{ steps.version_tag.outputs.version }} \
          --amend serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-armv7 \
          --amend serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-aarch64 \
          --amend serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}-x86_64

      - name: push_manifest_latest
        run: |
          docker manifest push \
          serowy/docker2mqtt:latest

      - name: push_manifest_version
        run: |
          docker manifest push \
          serowy/docker2mqtt:${{ steps.version_tag.outputs.version }}
