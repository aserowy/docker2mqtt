name: armv7_pipeline

on:
  push:
    tags: "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  linux_armv7:
    name: linux_armv7
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup_toolchain_armv7
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
          override: true
          target: armv7-unknown-linux-musleabihf
          toolchain: stable

      - name: cargo_dependency_cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: resolve_version_tag
        id: version_tag
        uses: battila7/get-version-action@v2

      - name: write_version_to_toml
        uses: thomaseizinger/set-crate-version@0941739e872e465c18af1148eccf85b249b82016
        with:
          version: ${{ steps.version_tag.outputs.version-without-v }}

      - name: cargo_clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: security_audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: cargo_build_armv7
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target armv7-unknown-linux-musleabihf --release

      - name: build_changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/release_notes_configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: docker_login
        run: echo ${{ secrets.DOCKER_ATOKEN }} | docker login -u serowy --password-stdin

      - name: docker_setup_qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: docker_setup_buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: docker_build
        run: |
          docker buildx build --push \
            --tag serowy/docker2mqtt:${{ steps.version_tag.outputs.version }} \
            --tag serowy/docker2mqtt:latest \
            --platform linux/arm/v7 .
